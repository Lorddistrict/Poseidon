---
- hosts: all
  remote_user: root
  tasks:
    - name: install vim
      apt:
        name: vim
        state: present
      tags: [all]

- hosts: private_servers
  remote_user: root
  tasks:
    - name: replace resolv.conf for all sX.infra
      copy:
        src: "/home/vagrant/Poseidon/ansible_config/templates/dnsmasq/resolv.conf"
        dest: "/etc/resolv.conf"
      tags: [privserv]

- hosts: network
  remote_user: root
  tasks:
    - name: install dnsmasq
      apt:
        name: dnsmasq
        state: present
      tags: [network]
    - name: replace existing dnsmasq.conf
      copy:
        src: "/home/vagrant/Poseidon/ansible_config/templates/dnsmasq/dnsmasq.conf"
        dest: "/etc/dnsmasq.conf"
      tags: [network]
    - name: install HAproxy
      package:
        name: haproxy
        state: present
        update_cache: yes
      tags: [haproxy]
    - name: replace haproxy config
      template:
        src: "/home/vagrant/Poseidon/ansible_config/templates/haproxy/haproxy.cfg"
        dest: "/etc/haproxy/haproxy.cfg"
        mode: 0644
      tags: [haproxy]
    - name: start service
      service:
        name: haproxy
        state: restarted
        enabled: yes
      tags: [haproxy]

- hosts: web
  remote_user: root
  vars_files:
    - "/home/vagrant/Poseidon/ansible_config/variables/directories.yml"
  tasks:
    - name: install web packages
      apt:
        name:
          - apache2
          - php7.3
          - nfs-common
        state: present
      tags: [web]
    - name: start service
      service:
        name: apache2
        state: started
      tags: [web]
    - name: mount NFS web volumes
      mount:
        fstype: nfs4
        opts: rw
        state: mounted
        src: s4.infra:/usr/src/{{ item.path }}
        path: "/mnt/{{ item.path }}"
      with_items: "{{ nfsserver_folders }}"
      tags: [web]
    - name: change permissions of NFS shared folders
      file:
        path: "/mnt/{{ item.path }}"
        state: directory
        recurse: true
        group: www-data
        owner: www-data
      with_items: "{{ nfsserver_folders }}"
      tags: [web]
    - name: create symbolic links to /var/www folder
      command: "ln -s /mnt/{{ item.path }} /var/www/"
      with_items: "{{ nfsserver_folders }}"
      tags: [web]

- hosts: database
  remote_user: root
  become: true
  vars_files:
    - "/home/vagrant/Poseidon/ansible_config/variables/database.yml"
  tasks:
    - name: install mariaDB
      package:
        name:
          - mariadb-server
          - mariadb-client
          - python-pip
          - python-pymysql
        update_cache: yes
        state: present
      tags: [database]
    - name: start service
      service:
        name: mysql
        state: started
        enabled: yes
      tags: [database]
    - name: copy credentials
      template:
        src: "/home/vagrant/Poseidon/ansible_config/templates/database/.my.cnf"
        dest: "/root/.my.cnf"
        mode: 0755
      tags: [database]
    - name: set password for root user
      mysql_user:
        name: root
        password: root
        priv: '*.*:ALL,GRANT'
        login_unix_socket: "/var/run/mysqld/mysqld.sock"
        state: present
      tags: [database]
    - name: removes anonymous users
      mysql_user:
        name: ""
        host_all: yes
        state: absent
      tags: [database]
    - name: access to DB
      blockinfile:
        path: "/etc/mysql/my.cnf"
        block: |
          [mysqld]
          bind-address=0.0.0.0
        state: present
      tags: [database]
    - name: reload service
      service:
        name: mariadb
        state: restarted
        enabled: yes
      tags: [database]
    - name: create users with all privilegies
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON *.* TO 'devopsuser'@'%' IDENTIFIED BY 'devopsuser' WITH GRANT OPTION
        - GRANT ALL PRIVILEGES ON *.* TO 'devsecuser'@'%' IDENTIFIED BY 'devsecuser' WITH GRANT OPTION
        - GRANT ALL PRIVILEGES ON *.* TO 'devsecopsuser'@'%' IDENTIFIED BY 'devsecopsuser' WITH GRANT OPTION
        - FLUSH PRIVILEGES
      changed_when: false
      tags: [database]
    - name: generate databases
      community.mysql.mysql_db:
        check_implicit_admin: yes
        login_user: "{{ item.user }}"
        login_password: "{{ item.password }}"
        name: "{{ item.name }}"
        state: present
      with_items: "{{ mariadb_databases }}"
      tags: [database]

- hosts: nfs
  remote_user: root
  become: true
  vars_files:
    - "/home/vagrant/Poseidon/ansible_config/variables/directories.yml"
  tasks:
    - name: install nfs server & dependencies
      package:
        name:
          - nfs-kernel-server
          - unzip
        update_cache: yes
        state: present
      tags: [nfs]
    - name: load NFS
      command: "modprobe nfs"
      tags: [nfs]
    - name: create shared folder
      file:
        state: directory
        path: "/usr/src/{{ item.path }}"
        mode: 0755
      with_items: "{{ nfsserver_folders }}"
      tags: [nfs]
    - name: create folder for PHP session
      file:
        state: directory
        path: "/usr/src/session"
        mode: 0755
      tags: [nfs]
    - name: replace export configuration folder
      template:
        src: "/home/vagrant/Poseidon/ansible_config/templates/nfs-server/exports"
        dest: "/etc/exports"
        mode: 0644
      tags: [nfs]
    - name: restart service
      service:
        name: nfs-server
        state: restarted
        enabled: yes
      tags: [nfs]
    - name: download wordpress
      get_url:
        url: https://fr.wordpress.org/latest-fr_FR.tar.gz
        dest: "/usr/src"
      tags: [nfs]
    - name: unzip it for each shared
      unarchive:
        remote_src: yes
        src: "/usr/src/wordpress-{{ wordpress_version }}-fr_FR.tar.gz"
        dest: "/usr/src/{{ item.path }}"
        owner: www-data
        group: www-data
        mode: 0755
      with_items: "{{ nfsserver_folders }}"
      tags: [nfs]
    - name: remove archive
      file:
        path: "/usr/src/wordpress-{{ wordpress_version }}-fr_FR.tar.gz"
        state: absent
      tags: [nfs]